// <auto-generated />
using System;
using EventEaseAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventEaseAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventEaseAPI.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("Action")
                        .HasMaxLength(200)
                        .HasColumnType("text");

                    b.Property<string>("AdminEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AdminPosition")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AdminRole")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("AdminId")
                        .HasName("PK__Admin__719FE48823C12FD0");

                    b.HasIndex(new[] { "AdminEmail" }, "UQ__Admin__F2AA7AD9E68A4AF7")
                        .IsUnique();

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("EventEaseAPI.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateOnly>("BookingDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("BookingTime")
                        .HasColumnType("time");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("ClientID");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("VenueId")
                        .HasColumnType("int");

                    b.HasKey("BookingId")
                        .HasName("PK__Booking__73951AED68C46960");

                    b.HasIndex("ClientId");

                    b.HasIndex("EventId");

                    b.HasIndex("VenueId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("EventEaseAPI.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ContactDetails")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("VenueId")
                        .HasColumnType("int");

                    b.HasKey("ClientId")
                        .HasName("PK__Client__E67E1A246BFF54D6");

                    b.HasIndex("BookingId");

                    b.HasIndex("EventId");

                    b.HasIndex("VenueId");

                    b.HasIndex(new[] { "ClientEmail" }, "UQ__Client__AD48A6FF76A963B0")
                        .IsUnique();

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("EventEaseAPI.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<DateOnly>("EventDate")
                        .HasColumnType("date");

                    b.Property<string>("EventDescription")
                        .HasColumnType("text");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EventTypeID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("VenueId")
                        .HasColumnType("int");

                    b.HasKey("EventId")
                        .HasName("PK__Event__7944C8108C887AC1");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("VenueId");

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("EventEaseAPI.Models.EventType", b =>
                {
                    b.Property<int>("EventTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventTypeId"));

                    b.Property<string>("EventTypeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("EventTypeId")
                        .HasName("PK__EventTyp__A9216B1F440A482A");

                    b.ToTable("EventType", (string)null);
                });

            modelBuilder.Entity("EventEaseAPI.Models.EventVendor", b =>
                {
                    b.Property<int>("EventVendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventVendorId"));

                    b.Property<string>("ContactDetails")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ServiceOffering")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("text");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("EventVendorId")
                        .HasName("PK__EventVen__EAE82A1006CA1BA4");

                    b.HasIndex("EventId");

                    b.ToTable("EventVendor", (string)null);
                });

            modelBuilder.Entity("EventEaseAPI.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("Action")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payment__9B556A38FA121E52");

                    b.HasIndex("BookingId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("EventEaseAPI.Models.Venue", b =>
                {
                    b.Property<int>("VenueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VenueId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EventTypeID");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("VenueName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("VenueId")
                        .HasName("PK__Venue__3C57E5F21273BBB8");

                    b.HasIndex("EventTypeId");

                    b.ToTable("Venue", (string)null);
                });

            modelBuilder.Entity("EventEaseAPI.Models.Booking", b =>
                {
                    b.HasOne("EventEaseAPI.Models.Client", "Client")
                        .WithMany("Bookings")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_Booking_Client");

                    b.HasOne("EventEaseAPI.Models.Event", "Event")
                        .WithMany("Bookings")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Booking__EventId__656C112C");

                    b.HasOne("EventEaseAPI.Models.Venue", "Venue")
                        .WithMany("Bookings")
                        .HasForeignKey("VenueId")
                        .IsRequired()
                        .HasConstraintName("FK__Booking__VenueId__66603565");

                    b.Navigation("Client");

                    b.Navigation("Event");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("EventEaseAPI.Models.Client", b =>
                {
                    b.HasOne("EventEaseAPI.Models.Booking", "Booking")
                        .WithMany("Clients")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Client__BookingI__6A30C649");

                    b.HasOne("EventEaseAPI.Models.Event", "Event")
                        .WithMany("Clients")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__Client__EventId__6B24EA82");

                    b.HasOne("EventEaseAPI.Models.Venue", "Venue")
                        .WithMany("Clients")
                        .HasForeignKey("VenueId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Client__VenueId__6C190EBB");

                    b.Navigation("Booking");

                    b.Navigation("Event");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("EventEaseAPI.Models.Event", b =>
                {
                    b.HasOne("EventEaseAPI.Models.EventType", "EventType")
                        .WithMany("Events")
                        .HasForeignKey("EventTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Event__EventType__628FA481");

                    b.HasOne("EventEaseAPI.Models.Venue", "Venue")
                        .WithMany("Events")
                        .HasForeignKey("VenueId")
                        .IsRequired()
                        .HasConstraintName("FK__Event__VenueId__619B8048");

                    b.Navigation("EventType");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("EventEaseAPI.Models.EventVendor", b =>
                {
                    b.HasOne("EventEaseAPI.Models.Event", "Event")
                        .WithMany("EventVendors")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__EventVend__Event__6EF57B66");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("EventEaseAPI.Models.Payment", b =>
                {
                    b.HasOne("EventEaseAPI.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Payment__Booking__72C60C4A");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("EventEaseAPI.Models.Venue", b =>
                {
                    b.HasOne("EventEaseAPI.Models.EventType", "EventType")
                        .WithMany("Venues")
                        .HasForeignKey("EventTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Venue__EventType__5EBF139D");

                    b.Navigation("EventType");
                });

            modelBuilder.Entity("EventEaseAPI.Models.Booking", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("EventEaseAPI.Models.Client", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("EventEaseAPI.Models.Event", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Clients");

                    b.Navigation("EventVendors");
                });

            modelBuilder.Entity("EventEaseAPI.Models.EventType", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Venues");
                });

            modelBuilder.Entity("EventEaseAPI.Models.Venue", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Clients");

                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
